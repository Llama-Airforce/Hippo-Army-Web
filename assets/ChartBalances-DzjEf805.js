import{d as A,ap as M,aq as U,b as V,o as $,az as q,ar as P,e as d,as as W,l as N,u as j,a as z,b0 as T,c as D,w,_ as F,f as O,g as S,h as c,an as I,a$ as Y,k as B,m as H}from"./index-D_npeDaU.js";import{b as J,u as K,G as Q,r as X,a as Z,d as x,_ as ee}from"./UseLightweightChart-D-YlHlPt.js";import{_ as ae}from"./Tooltip-Cwwh2qOo.js";import{r as L,u as te}from"./timestamp-CETUM7yH.js";const se=A({__name:"ButtonToggle",props:{modelValue:{type:Boolean,default:!1},modelModifiers:{}},emits:M(["change"],["update:modelValue"]),setup(i,{emit:f}){const g=U(i,"modelValue"),p=f;return(k,b)=>{const m=q;return $(),V(m,{class:P({toggled:g.value}),onClick:b[0]||(b[0]=C=>p("change",!g.value))},{default:d(()=>[W(k.$slots,"default",{},void 0,!0)]),_:3},8,["class"])}}}),ne=N(se,[["__scopeId","data-v-1a55ee48"]]),le={class:"actions"},oe={ref:"chartRef",class:"chart"},ce="chart_pool_balances_dollars",ie="chart_pool_balances_type",re=A({__name:"ChartBalances",props:{balances:{},title:{},showDollars:{type:Boolean,default:!0}},setup(i){const f=j(),{items:g,toggles:p,disabled:k}=J(()=>i.balances.map(({symbol:e},a)=>({id:e,label:e,color:f.value.colorsArray[a],togglable:!0}))),b=z("card"),m=T(ce,!1),C=["unstacked","stacked","100%"],y=[{id:"unstacked",label:"Unstacked"},{id:"stacked",label:"Stacked"},{id:"100%",label:"Stacked (100%)"}],v=T(ie,C[0]),{chart:h,series:_}=K({createChartOptions:Z(),series:[...i.balances.map(({symbol:e},a)=>({type:Q,name:e,options:D(()=>({lineWidth:2,lineType:X.WithSteps,color:f.value.colorsArray[a],lastValueVisible:!1,priceLineVisible:!1}))})),{type:"StackedArea",name:"stacked",options:D(()=>({colors:g.value.map((e,a)=>({item:e,i:a})).filter(({item:e})=>!k.value.includes(e.id)).map(({i:e})=>e).map(e=>f.value.colorsArray[e]).map(e=>({line:e,area:e+"15"})),lineWidth:2,lastValueVisible:!1,priceLineVisible:!1}))}]});w(()=>{h.value&&h.value.applyOptions({localization:{priceFormatter:v.value==="100%"?e=>`${L(e,0,"percentage")}%`:e=>`${L(e,1,"dollar")}${te(e)}`}})}),w(R);function R(){if(!(!h.value||Object.values(_).length<0)){for(const e of Object.values(_))e==null||e.setData([]);v.value==="unstacked"?E():G(v.value==="100%"),h.value.timeScale().fitContent()}}function E(){var e,a;for(const{symbol:r,balances:t}of i.balances.values()){if(!p[r].value){(e=_[r])==null||e.setData([]);continue}const s=i.showDollars&&m.value,l=t.map(n=>({time:n.timestamp.getUTCTimestamp(),value:s?n.balance*n.tokenPrice:n.balance})).uniqWith((n,u)=>n.time===u.time).orderBy(n=>n.time,"asc");l.length>0&&((a=_[r])==null||a.setData(l))}}function G(e){if(!_.stacked)return;const a=i.showDollars&&m.value,r=[...i.balances.values()].filter(({symbol:t,balances:s})=>p[t].value&&s.length>0).flatMap(({symbol:t,balances:s})=>s.map(l=>({symbol:t,timestamp:l.timestamp,balance:a?l.balance*l.tokenPrice:l.balance}))).groupBy(t=>t.timestamp.getTime()).entries().map(([t,s])=>{const l=e&&s.sumBy(u=>u.balance)||1,n=s.map(u=>e?u.balance/l*100:u.balance);return{time:Number(t)/1e3,values:n}}).uniqWith((t,s)=>t.time===s.time).orderBy(t=>t.time,"asc");r.length>0&&_.stacked.setData(r)}return(e,a)=>{const r=Y,t=ne,s=ae,l=ee,n=x,u=F;return $(),V(u,{ref_key:"card",ref:b,class:"stack-actions",title:e.title??"Balances"},{actions:d(()=>[O("div",le,[W(e.$slots,"actions",{},void 0,!0),S(r,{options:y,selected:y.find(o=>o.id===c(v))??y[0],onSelect:a[0]||(a[0]=o=>v.value=o.id)},{option:d(({option:o})=>[B(H(o.label),1)]),_:1},8,["selected"]),e.showDollars?($(),V(s,{key:0},{trigger:d(()=>[S(t,{"model-value":c(m),onClick:a[1]||(a[1]=o=>m.value=!c(m))},{default:d(()=>a[3]||(a[3]=[B(" $ ")])),_:1,__:[3]},8,["model-value"])]),default:d(()=>[a[4]||(a[4]=B(" Show token balances in USD. "))]),_:1,__:[4]})):I("",!0),S(l,{chart:c(h),target:c(b)},null,8,["chart","target"])])]),"actions-secondary":d(()=>[S(n,{items:c(g),disabled:c(k),onToggle:a[2]||(a[2]=o=>c(p)[o].value=!c(p)[o].value)},null,8,["items","disabled"])]),default:d(()=>[O("div",oe,null,512)]),_:3},8,["title"])}}}),_e=N(re,[["__scopeId","data-v-d45d4cc9"]]);export{_e as _,ne as a};
