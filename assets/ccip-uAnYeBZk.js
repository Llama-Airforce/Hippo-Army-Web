import{d as b,l as E,a as O,c as x,b as R,e as M}from"./User.page-NDUBsTi-.js";import{x as h,I as w,B as u,bW as g,a5 as k,bX as y,r as S}from"./index-BgPU8Sw7.js";import"./index-BAU3YeOn.js";import"./protocols-ChmxaRVP.js";import"./Number-DpAK-pXX.js";import"./AsyncValue-iTYOvWr4.js";import"./Pagination-vgbH7lYO.js";import"./NoData-DqQQgcUL.js";import"./UseLightweightChart-Bx3pg8jN.js";import"./BtnChartLWExport.vue_vue_type_script_setup_true_lang-BmD2VBda.js";import"./UseLegend-Jz1Vac8l.js";import"./Table-CvXFjjfl.js";import"./UseSort-0i7aun0D.js";import"./TokenIcon-bD4pYnHy.js";import"./InputText-BZ7-gt8K.js";import"./TabItem.vue_vue_type_script_setup_true_lang-C5Ot3N1j.js";import"./util-CVNQ9WdU.js";function $(s,t){if(!h(s,{strict:!1}))throw new w({address:s});if(!h(t,{strict:!1}))throw new w({address:t});return s.toLowerCase()===t.toLowerCase()}class q extends u{constructor({callbackSelector:t,cause:a,data:c,extraData:i,sender:p,urls:r}){var n;super(a.shortMessage||"An error occurred while fetching for an offchain result.",{cause:a,metaMessages:[...a.metaMessages||[],(n=a.metaMessages)!=null&&n.length?"":[],"Offchain Gateway Call:",r&&["  Gateway URL(s):",...r.map(d=>`    ${g(d)}`)],`  Sender: ${p}`,`  Data: ${c}`,`  Callback selector: ${t}`,`  Extra data: ${i}`].flat(),name:"OffchainLookupError"})}}class C extends u{constructor({result:t,url:a}){super("Offchain gateway response is malformed. Response data must be a hex value.",{metaMessages:[`Gateway URL: ${g(a)}`,`Response: ${k(t)}`],name:"OffchainLookupResponseMalformedError"})}}class A extends u{constructor({sender:t,to:a}){super("Reverted sender address does not match target contract address (`to`).",{metaMessages:[`Contract address: ${a}`,`OffchainLookup sender address: ${t}`],name:"OffchainLookupSenderMismatchError"})}}const V="0x556f1830",T={name:"OffchainLookup",type:"error",inputs:[{name:"sender",type:"address"},{name:"urls",type:"string[]"},{name:"callData",type:"bytes"},{name:"callbackFunction",type:"bytes4"},{name:"extraData",type:"bytes"}]};async function Y(s,{blockNumber:t,blockTag:a,data:c,to:i}){const{args:p}=b({data:c,abi:[T]}),[r,n,d,f,o]=p,{ccipRead:e}=s,m=e&&typeof(e==null?void 0:e.request)=="function"?e.request:G;try{if(!$(i,r))throw new A({sender:r,to:i});const l=n.includes(E)?await O({data:d,ccipRequest:m}):await m({data:d,sender:r,urls:n}),{data:L}=await x(s,{blockNumber:t,blockTag:a,data:R([f,M([{type:"bytes"},{type:"bytes"}],[l,o])]),to:i});return L}catch(l){throw new q({callbackSelector:f,cause:l,data:c,extraData:o,sender:r,urls:n})}}async function G({data:s,sender:t,urls:a}){var i;let c=new Error("An unknown error occurred.");for(let p=0;p<a.length;p++){const r=a[p],n=r.includes("{data}")?"GET":"POST",d=n==="POST"?{data:s,sender:t}:void 0,f=n==="POST"?{"Content-Type":"application/json"}:{};try{const o=await fetch(r.replace("{sender}",t.toLowerCase()).replace("{data}",s),{body:JSON.stringify(d),headers:f,method:n});let e;if((i=o.headers.get("Content-Type"))!=null&&i.startsWith("application/json")?e=(await o.json()).data:e=await o.text(),!o.ok){c=new y({body:d,details:e!=null&&e.error?k(e.error):o.statusText,headers:o.headers,status:o.status,url:r});continue}if(!S(e)){c=new C({result:e,url:r});continue}return e}catch(o){c=new y({body:d,details:o.message,url:r})}}throw c}export{G as ccipRequest,Y as offchainLookup,T as offchainLookupAbiItem,V as offchainLookupSignature};
