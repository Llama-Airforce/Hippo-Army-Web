import{d as E,l as O,a as R,c as b,b as x,e as M}from"./User.page-DxS6x9Ai.js";import{D as h,F as w,B as u,c0 as g,P as k,c1 as y,v as S}from"./index-CAAcd5HQ.js";import"./index-C583qtuY.js";import"./protocols-Cu8BQ-U5.js";import"./timestamp-CP_Pnh_7.js";import"./Pagination-vgbH7lYO.js";import"./NoData-CWdskuaS.js";import"./UseLightweightChart-DfxaIZIP.js";import"./BtnChartLWExport.vue_vue_type_script_setup_true_lang-B4Ulr9Xf.js";import"./Table-UUN3-BTX.js";import"./AsyncValue-CuG9W6iU.js";import"./UseSort-DOMNyGqH.js";import"./TokenIcon-CBN0XL_z.js";import"./InputText-Z7Ej3_VQ.js";import"./TabItem.vue_vue_type_script_setup_true_lang-BCtFVsaL.js";import"./util-CVNQ9WdU.js";function $(a,e){if(!h(a,{strict:!1}))throw new w({address:a});if(!h(e,{strict:!1}))throw new w({address:e});return a.toLowerCase()===e.toLowerCase()}class q extends u{constructor({callbackSelector:e,cause:t,data:n,extraData:c,sender:i,urls:s}){super(t.shortMessage||"An error occurred while fetching for an offchain result.",{cause:t,metaMessages:[...t.metaMessages||[],t.metaMessages?.length?"":[],"Offchain Gateway Call:",s&&["  Gateway URL(s):",...s.map(d=>`    ${g(d)}`)],`  Sender: ${i}`,`  Data: ${n}`,`  Callback selector: ${e}`,`  Extra data: ${c}`].flat(),name:"OffchainLookupError"})}}class C extends u{constructor({result:e,url:t}){super("Offchain gateway response is malformed. Response data must be a hex value.",{metaMessages:[`Gateway URL: ${g(t)}`,`Response: ${k(e)}`],name:"OffchainLookupResponseMalformedError"})}}class A extends u{constructor({sender:e,to:t}){super("Reverted sender address does not match target contract address (`to`).",{metaMessages:[`Contract address: ${t}`,`OffchainLookup sender address: ${e}`],name:"OffchainLookupSenderMismatchError"})}}const V="0x556f1830",T={name:"OffchainLookup",type:"error",inputs:[{name:"sender",type:"address"},{name:"urls",type:"string[]"},{name:"callData",type:"bytes"},{name:"callbackFunction",type:"bytes4"},{name:"extraData",type:"bytes"}]};async function X(a,{blockNumber:e,blockTag:t,data:n,to:c}){const{args:i}=E({data:n,abi:[T]}),[s,d,p,r,o]=i,{ccipRead:f}=a,m=f&&typeof f?.request=="function"?f.request:D;try{if(!$(c,s))throw new A({sender:s,to:c});const l=d.includes(O)?await R({data:p,ccipRequest:m}):await m({data:p,sender:s,urls:d}),{data:L}=await b(a,{blockNumber:e,blockTag:t,data:x([r,M([{type:"bytes"},{type:"bytes"}],[l,o])]),to:c});return L}catch(l){throw new q({callbackSelector:r,cause:l,data:n,extraData:o,sender:s,urls:d})}}async function D({data:a,sender:e,urls:t}){let n=new Error("An unknown error occurred.");for(let c=0;c<t.length;c++){const i=t[c],s=i.includes("{data}")?"GET":"POST",d=s==="POST"?{data:a,sender:e}:void 0,p=s==="POST"?{"Content-Type":"application/json"}:{};try{const r=await fetch(i.replace("{sender}",e.toLowerCase()).replace("{data}",a),{body:JSON.stringify(d),headers:p,method:s});let o;if(r.headers.get("Content-Type")?.startsWith("application/json")?o=(await r.json()).data:o=await r.text(),!r.ok){n=new y({body:d,details:o?.error?k(o.error):r.statusText,headers:r.headers,status:r.status,url:i});continue}if(!S(o)){n=new C({result:o,url:i});continue}return o}catch(r){n=new y({body:d,details:r.message,url:i})}}throw n}export{D as ccipRequest,X as offchainLookup,T as offchainLookupAbiItem,V as offchainLookupSignature};
