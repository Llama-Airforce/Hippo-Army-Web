import{d as L,ap as R,aq as E,b as B,o as C,az as G,ar as M,e as m,as as U,l as O,u as q,a as P,a$ as D,c as $,w as j,_ as F,f as w,g as k,h as i,an as I,b0 as z,k as V,m as Y}from"./index-ubWCN88q.js";import{u as H,_ as J}from"./UseLegend-DVYHHnok.js";import{u as K,G as Q,r as X,a as Z,_ as x}from"./UseLightweightChart-vEBfyHR1.js";import{_ as ee}from"./Tooltip-CsZ4ys_a.js";import{r as te,u as ae}from"./timestamp-DJ1YwJUy.js";const se=L({__name:"ButtonToggle",props:{modelValue:{type:Boolean,default:!1},modelModifiers:{}},emits:R(["change"],["update:modelValue"]),setup(r,{emit:f}){const g=E(r,"modelValue"),p=f;return(v,b)=>{const d=G;return C(),B(d,{class:M({toggled:g.value}),onClick:b[0]||(b[0]=T=>p("change",!g.value))},{default:m(()=>[U(v.$slots,"default",{},void 0,!0)]),_:3},8,["class"])}}}),le=O(se,[["__scopeId","data-v-1a55ee48"]]),ne={style:{display:"flex"}},oe={ref:"chartRef",class:"chart"},ce="chart_pool_balances_dollars",ie="chart_pool_balances_type",re=L({__name:"ChartBalances",props:{balances:{},title:{},showDollars:{type:Boolean,default:!0}},setup(r){const f=q(),{items:g,toggles:p,disabled:v}=H(()=>r.balances.map(({symbol:e},t)=>({id:e,label:e,color:f.value.colorsArray[t],togglable:!0}))),b=P("card"),d=D(ce,!1),T=["unstacked","stacked","100%"],y=[{id:"unstacked",label:"Unstacked"},{id:"stacked",label:"Stacked"},{id:"100%",label:"Stacked (100%)"}],h=D(ie,T[0]),{chart:S,series:_}=K({createChartOptions:Z(),series:[...r.balances.map(({symbol:e},t)=>({type:Q,name:e,options:$(()=>({priceFormat:{type:"custom",formatter:n=>`${te(n,1,"dollar")}${ae(n)}`},lineWidth:2,lineType:X.WithSteps,color:f.value.colorsArray[t],lastValueVisible:!1,priceLineVisible:!1}))})),{type:"StackedArea",name:"stacked",options:$(()=>({colors:g.value.map((e,t)=>({item:e,i:t})).filter(({item:e})=>!v.value.includes(e.id)).map(({i:e})=>e).map(e=>f.value.colorsArray[e]).map(e=>({line:e,area:e+"15"})),lineWidth:2,lastValueVisible:!1,priceLineVisible:!1}))}]});j(A);function A(){if(!(!S.value||Object.values(_).length<0)){for(const e of Object.values(_))e==null||e.setData([]);h.value==="unstacked"?W():N(h.value==="100%"),S.value.timeScale().fitContent()}}function W(){var e,t;for(const{symbol:n,balances:a}of r.balances.values()){if(!p[n].value){(e=_[n])==null||e.setData([]);continue}const s=r.showDollars&&d.value,o=a.map(l=>({time:l.timestamp.getUTCTimestamp(),value:s?l.balance*l.tokenPrice:l.balance})).uniqWith((l,u)=>l.time===u.time).orderBy(l=>l.time,"asc");o.length>0&&((t=_[n])==null||t.setData(o))}}function N(e){if(!_.stacked)return;const t=r.showDollars&&d.value,n=[...r.balances.values()].filter(({symbol:a,balances:s})=>p[a].value&&s.length>0).flatMap(({symbol:a,balances:s})=>s.map(o=>({symbol:a,timestamp:o.timestamp,balance:t?o.balance*o.tokenPrice:o.balance}))).groupBy(a=>a.timestamp.getTime()).entries().map(([a,s])=>{const o=e?s.reduce((u,c)=>u+c.balance,0):1,l=s.map(u=>e?u.balance/o*100:u.balance);return{time:Number(a)/1e3,values:l}}).uniqWith((a,s)=>a.time===s.time).orderBy(a=>a.time,"asc");n.length>0&&_.stacked.setData(n)}return(e,t)=>{const n=z,a=le,s=ee,o=x,l=J,u=F;return C(),B(u,{ref_key:"card",ref:b,class:"stack-actions",title:e.title??"Balances"},{actions:m(()=>[w("div",ne,[k(n,{options:y,selected:y.find(c=>c.id===i(h))??y[0],onSelect:t[0]||(t[0]=c=>h.value=c.id)},{option:m(({option:c})=>[V(Y(c.label),1)]),_:1},8,["selected"]),e.showDollars?(C(),B(s,{key:0},{trigger:m(()=>[k(a,{style:{"margin-right":"1rem"},"model-value":i(d),onClick:t[1]||(t[1]=c=>d.value=!i(d))},{default:m(()=>t[3]||(t[3]=[V(" $ ")])),_:1},8,["model-value"])]),default:m(()=>[t[4]||(t[4]=V(" Show token balances in USD. "))]),_:1})):I("",!0),k(o,{chart:i(S),target:i(b)},null,8,["chart","target"])])]),"actions-secondary":m(()=>[k(l,{items:i(g),disabled:i(v),onToggle:t[2]||(t[2]=c=>i(p)[c].value=!i(p)[c].value)},null,8,["items","disabled"])]),default:m(()=>[w("div",oe,null,512)]),_:1},8,["title"])}}}),fe=O(re,[["__scopeId","data-v-97205b1c"]]);export{fe as _,le as a};
